{"type":"data","nodes":[null,{"type":"data","data":[{"metadata":1,"content":13},{"authorId":2,"slug":3,"tags":4,"title":9,"imageUrl":10,"datePublished":11,"readTime":12},"orville-daley","programming-mecanum-wheels",[5,6,7,8],"programming","robot","drivetrain","chassis","Programming Mecanum Wheels","mecanum","18 November 2022","5","## The Physics of Mecanum\n\nMecanum wheels are a unique kind of wheel that, in contrast to conventional wheels, allow for mobility and holonomic strafing. They are made up of a number of rubber rollers that have been turned 45 degrees to the left or right.\n\nIn a typical mecanum drivetrain, sideways motion is produced by turning the wheels on one diagonal in the opposite direction from the wheels on the other diagonal. These wheel motions may be combined to move the vehicle in any direction and make it rotate in any direction.\n\nThe four mecanum wheels in a typical mecanum drive system are arranged in a \"X\" pattern. This indicates that when viewed from above, the rollers are inclined toward the center. The force vectors generated by the offset rollers can be summed and equations for movements in all directions can be derived.\n\n\u003Cimg src=\"https:\u002F\u002Fgm0.org\u002Fen\u002Flatest\u002F_images\u002Fmecanum-drive-force-diagram.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\nVectors 1, 2, 3, and 4 in the figure above represent the force vectors produced by the mecanum wheels when the chassis is told to move toward the top of the picture. Every motor is moving ahead. Their X and Y components are shown by the blue and red lines, respectively.\n\n\u003E **Note**\n\u003E DO NOT HARDCODE THE WHEEL MOVEMENTS, THESE CAN BE PROGRAMMATICALLY COMPUTED\n\n\u003E **Note**\n\u003E It is important to note that because of friction, perfect movement isnâ€™t possible in every direction.\n\n## Deriving Mecanum Control Equations\n\n#### Direction\n\nBecause the motors are facing away from each other, one side of your robot's motor should be reversed. If your mecanum wheels are connected directly to the motors then reverse the left side motors. If your mecanum wheels are connected to with a gear ratio then reverse the right side motors.\n\n```sql\n SET leftBackMotor DIRECTION TO REVERSE\n SET leftFrontMotor DIRECTION TO REVERSE\n```\n\n\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002FHj3hzI2.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\n#### Linear Motion\n\nJoysticks can be used to input x and y coordinates. The forward motion is controlled by the y-axis and the sideways motion (strafe) is controlled by the x-axis.\n\n\u003E \u003E **Reminder**\n\u003E \u003E The y-axis is inverted, so the forward motion is negative when the joystick is pushed forward.\n\n```sql\n SET forward TO -gamepad1.left_stick_y\n SET strafe TO gamepad1.left_stick_x\n```\n\n\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002FvhUFgzJ.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\n##### Deriving Linear Motion Equations\n\nFor the robot to move forward, we would need all wheels to have a positive power. Therefore, in the equation, all motor equation have forward as positive.\n\n```sql\n SET leftFrontMotorPower TO forward\n SET rightFrontMotorPower TO forward\n SET leftBackMotorPower TO forward\n SET rightBackMotorPower TO forward\n```\n\nTo incorporate strafing, consider moving right, ie: a positive strafe value. We would require left wheels to move in opposite direction away from each other (with the front left wheel going forward). We would also need the right going in opposite direction coming together (with the front right wheel going backward). This can be seen in the figure 1.\n\n```sql\n SET leftFrontMotorPower TO forward + strafe\n SET rightFrontMotorPower TO forward - strafe\n SET leftBackMotorPower TO forward - strafe\n SET rightBackMotorPower TO forward + strafe\n```\n\n#### Rotational Motion\n\nThe turning motion is controlled by the x-axis of the right joystick. Moving the joystick to the right will cause the robot to turn clockwise.\n\n```sql\n SET turn TO gamepad1.right_stick_x\n```\n\n\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002FWju0Ls2.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\n##### Deriving Rotational Motion Equations\n\nTo turn clockwise, we would need the right wheels to move backwards whilst the left wheels are moving forward.\n\n```sql\n SET leftFrontMotorPower TO turn\n SET rightFrontMotorPower TO -turn\n SET leftBackMotorPower TO turn\n SET rightBackMotorPower TO -turn\n```\n\n#### Combining Linear and Rotational Motion\n\nTo combine linear and rotational motion, we would need to add the rotational motion to the linear motion equations.\n\n```sql\n SET leftFrontMotorPower TO forward + strafe + turn\n SET rightFrontMotorPower TO forward - strafe - turn\n SET leftBackMotorPower TO forward - strafe + turn\n SET rightBackMotorPower TO forward + strafe - turn\n```\n\n\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002Ff92pXII.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\n#### Normalizing Motor Powers\n\nThe motor powers are normalized to ensure that the robot moves uniformly. If a motor has a power greater than 1 then it clipped to 1. This would lead to the robot moving weirdly.\n\n```sql\n SET maxPower TO MAX( 1, ABS(forward) + ABS(strafe) + ABS(turn) )\n SET leftFrontMotorPower TO leftFrontMotorPower \u002F maxPower\n SET rightFrontMotorPower TO rightFrontMotorPower \u002F maxPower\n SET leftBackMotorPower TO leftBackMotorPower \u002F maxPower\n SET rightBackMotorPower TO rightBackMotorPower \u002F maxPower\n```\n\n## The Full Pseudocode\n\n```sql\nSTART\n\t# Remember one side of the robot's wheel should be reversed: the left side.\n\n\tSET forward TO -gamepad.left_stick_y # The y axis of the joystick is flipped with regards to the cartesian plane.\n\tSET strafe TO gamepad.left_stick_x\n\tSET turn TO gamepad.right_stick_x\n\n\tSET leftFrontMotorPower TO forward + strafe + turn\n\tSET rightFrontMotorPower TO forward - strafe - turn\n\tSET leftBackMotorPower TO forward - strafe + turn\n\tSET rightBackMotorPower TO forward + strafe - turn\n\n\tSET maxPower TO MAX( 1, ABS(forward) + ABS(strafe) + ABS(turn) )\n\tSET leftFrontMotorPower TO leftFrontMotorPower \u002F maxPower\n\tSET rightFrontMotorPower TO rightFrontMotorPower \u002F maxPower\n\tSET leftBackMotorPower TO leftBackMotorPower \u002F maxPower\n\tSET rightBackMotorPower TO rightBackMotorPower \u002F maxPower\n\n\tSET leftFrontMotor POWER TO leftFrontMotorPower\n\tSET rightFrontMotor POWER TO rightFrontMotorPower\n\tSET leftBackMotor POWER TO leftBackMotorPower\n\tSET rightBackMotor POWER TO rightBackMotorPower\n\nSTOP.\n```\n\n### The Full Blocks Code\n\n\u003Cimg src=\"https:\u002F\u002Fimgur.com\u002FbyaSA7D.png\" alt=\"Mecanum Drivetrain\"\nstyle=\"margin-right:auto\" \u002F\u003E\n\n### Citations and Additional Resources\n\n```\nhttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=gnSW2QpkGXQ\nhttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Xrc0l4TDnyw\nhttps:\u002F\u002Fwww.youtube.com\u002Fwatch?v=Ne09Y72zW_Y\nhttps:\u002F\u002Fseamonsters-2605.github.io\u002Farchive\u002Fmecanum\u002F\nhttps:\u002F\u002Fftcforum.usfirst.org\u002Fforum\u002Fftc-technology\u002Fandroid-studio\u002F6361-mecanum-wheels-drive-code-example\nhttps:\u002F\u002Fwww.tutorialspoint.com\u002Fjava\u002Fnumber_atan2.htm\nhttp:\u002F\u002Fthinktank.wpi.edu\u002Fresources\u002F346\u002FControllingMecanumDrive.pdf\n```\n"],"uses":{"params":["slug"]}}]}